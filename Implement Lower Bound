You are given an array 'arr' sorted in non-decreasing order and a number 'x'. You must return the index of the lower bound of 'x'.
1. For a sorted array 'arr', 'lower_bound' of a number 'x' is defined as the smallest index 'idx' such that the value 'arr[idx]' is not less than 'x'.If all numbers are smaller than 'x', then 'n' should be the 'lower_bound' of 'x', where 'n' is the size of array.
2. Try to do this in O(log(n)).
Example:
Input: ‘arr’ = [1, 2, 2, 3] and 'x' = 0
Output: 0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
int lowerBound(vector<int> arr, int n, int x) {
	// Write your code here
    int left = 0, right = n;

    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] < x) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    return left;
}

