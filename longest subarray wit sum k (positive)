Given an array arr[] containing integers and an integer k, your task is to find the length of the longest subarray where the sum of its elements 
is equal to the given value k. If there is no subarray with sum equal to k, return 0.

Examples:

Input: arr[] = [10, 5, 2, 7, 1, -10], k = 15
Output: 6
Explanation: Subarrays with sum = 15 are [5, 2, 7, 1], [10, 5] and [10, 5, 2, 7, 1, -10]. The length of the longest subarray with a sum of 15 is 6.
Input: arr[] = [-5, 8, -14, 2, 4, 12], k = -5
Output: 5
Explanation: Only subarray with sum = -5 is [-5, 8, -14, 2, 4] of length 5.
Input: arr[] = [10, -10, 20, 30], k = 5
Output: 0
Explanation: No subarray with sum = 5 is present in arr[].
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
//brute-1
int longestSubarrayWithSumK(vector<int> a, long long k) {
    // Write your code here
     int size=a.size();
     int len=0;
     for(int i=0;i<size;i++){
         for(int j=i;j<size;j++){
             int sum=0;
             for(int t=i;t<=j;t++){
                 sum=sum+a[t];
             }
                 if(sum==k){
                     len=max(len, j-i+1);
             }
         }
     }
     return len;
                
}
--------------------------------------------------------------------------------------------
//brute-2
int longestSubarrayWithSumK(vector<int> a, long long k) {
    // Write your code here
       int size=a.size();
     int len=0;
     for(int i=0;i<size;i++){
             int sum=0;
         for(int j=i;j<size;j++){
                 sum=sum+a[j];
                 if(sum==k){
                     len=max(len, j-i+1);
             }
         }
         }
     return len;
    
                
}
---------------------------------------------------------------------------------------------------
//optimal
int longestSubarrayWithSumK(vector<int> a, long long k) {
//    Write your code here
        int n=a.size();
    int i=0,j=0,len=0;
    long long sum=a[0];
    while(i<n){
        while (j<=i && sum>k){
             sum=sum-a[j];
             j++;
         }
        if(sum==k){
            len=max(len,i-j+1);
        }
         i++;
         if(i<n) sum+=a[i];

    }
    return len;
}
