Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 
Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true

Example 3:
Input: s = "(]"
Output: false

Example 4:
Input: s = "([])"
Output: true
---------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    bool isValid(string s) {
        int n=s.size();
        char stack[n];
        int top=-1;
        for(int i=0;i<n;i++){
            if(s[i]=='('|| s[i]=='{' || s[i]=='['){
                stack[++top]=s[i];
            }
            else{
                    if(top==-1) return false;
                    if( (s[i]==')' && stack[top]=='(')||
                        (s[i]=='}' && stack[top]=='{')||
                        (s[i]==']' && stack[top]=='[')){
                        top--;
                        }
                    else 
                        return false;
            }
        }
        return top==-1; //if top==-1  is true it return true 
    }
};
