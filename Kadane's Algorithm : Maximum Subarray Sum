Given an integer array nums, find the subarray with the largest sum, and return its sum.

Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

Example 2:
Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.

Example 3:
Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.

Example 4:
Input: nums = [-1]
Output: -1
Explanation: The subarray [-1] has the largest sum -1.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
//brute

#include <bits/stdc++.h>
using namespace std;
int maxSubarraySum(int arr[], int n) {
    int maxi = INT_MIN; // maximum sum
    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            // subarray = arr[i.....j]
            int sum = 0;
            //add all the elements of subarray:
            for (int k = i; k <= j; k++) {
                sum += arr[k];
            }
            maxi = max(maxi, sum);
        }
    }
    return maxi;
}
int main()
{
    int arr[] = { -2, 1, -3, 4, -1, 2, 1, -5, 4};
    int n = sizeof(arr) / sizeof(arr[0]);
    int maxSum = maxSubarraySum(arr, n);
    cout << "The maximum subarray sum is: " << maxSum << endl;
    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------
//better
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n=nums.size(), maxSum=0;
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=i;j<n;j++){
                sum=sum+nums[j];
                maxSum=max(maxSum,sum);
            }
        }
        return maxSum;
  }
};
----------------------------------------------------------------------------------------------------------------------------------------------
//optimal
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
 int n=nums.size();
        int maxSum=nums[0],sum=0;
        for(int i=0;i<n;i++){
            sum=sum+nums[i];
            maxSum=max(maxSum,sum);
             
            if(sum<0)
                sum=0;
        }
        return maxSum;
    }
};


