Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]
----------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        //brute
        int n=nums.size();
        vector<int> temp(n,0);
        int k=0;
        for(int i=0;i<n;i++){
            if(nums[i]!=0){

                temp[k++]=nums[i];
            }
        }
        nums=temp;

----------------------------------------------------------------------------------------------------------
    void moveZeroes(vector<int>& nums) {
        //optimal
        int k;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==0){
                k=i;
                break;
            }
        }
        for(int i=k+1;i<nums.size();i++){
            if(nums[i]!=0){
                swap(nums[i],nums[k]);
                k++;
            }
        }

}
};
