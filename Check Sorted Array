You have been given an array ‘a’ of ‘n’ non-negative integers.You have to check whether the given array is sorted in the non-decreasing order or not.
Your task is to return 1 if the given array is sorted. Else, return 0.

Example :
Input: ‘n’ = 5, ‘a’ = [1, 2, 3, 4, 5]
Output: 1
--------------------------------------------------------------------------------------------------------------------------------------
//brute
#include <bits/stdc++.h>

using namespace std;

bool isSorted(int arr[], int n) {
  for (int i = 0; i < n; i++) {
    for (int j = i + 1; j < n; j++) {
      if (arr[j] < arr[i])
        return false;
    }
  }

  return true;
}

int main() {

  int arr[] = {1, 2, 3, 4, 5}, n = 5;
  bool ans = isSorted(arr, n);
  if (ans) cout << "True" << endl;
  else cout << "False" << endl;
  return 0;
}
------------------------------------------------------------------------------------------
//optimal
using while loop

    int i=0;
int isSorted(int n, vector<int> a) {
    // Write your code here.
    while(i<n-1){
        if(a[i]<=a[i+1]){
            i++;
        }
        else    
            return 0;
    }
    return 1;
}

//or another using while loop
    int i=0;
int isSorted(int n, vector<int> a) {
    // Write your code here.
    int i=1;
    while(i<n){
        if(a[i]<a[i-1])
            return 0;
        else 
            i++;
    }
        return 1;
}
----------------------------------------
using for loop


#include<bits/stdc++.h>

using namespace std;

bool isSorted(int arr[], int n) {
  for (int i = 1; i < n; i++) {
    if (arr[i] < arr[i - 1])
      return false;
  }

  return true;
}

int main() {

  int arr[] = {1, 2, 3, 4, 5}, n = 5;

  printf("%s", isSorted(arr, n) ? "True" : "False");

}


